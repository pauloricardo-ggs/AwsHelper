@page "/parameter-store/variables/add"
@using AwsHelper.Services
@using AwsHelper.Data
@using AwsHelper.Models
@using Microsoft.EntityFrameworkCore
@inject ParameterStoreService ParamStore
@inject AppDbContext DbContext

<h3>Enviar Variáveis para o Parameter Store</h3>

<div class="d-flex gap-2 align-items-end">
    <div style="flex: 1;">
        <label>Perfil AWS:</label>
        <select class="form-control" @bind="SelectedProfile" disabled="@IsProcessing">
            @foreach (var profile in AvailableProfiles)
            {
                <option value="@profile">@profile</option>
            }
        </select>
    </div>

    <div style="flex: 2;">
        <label>Caminho:</label>
        <select class="form-control" @bind="SelectedPath" disabled="@IsProcessing">
            <option value="">Selecione um caminho...</option>
            @foreach (var parameterStorage in AvailableParameterStorages)
            {
                <option value="@parameterStorage.Path">@parameterStorage.Description</option>
            }
        </select>
    </div>
</div>

<br />

<label>Variáveis (chave=valor por linha):</label>
<textarea @bind="InputText" rows="10" class="form-control" disabled="@IsProcessing"></textarea>
<br />
<button class="btn btn-primary" @onclick="Upload" disabled="@IsProcessing">
    @(IsProcessing ? "Enviando..." : "Enviar")
</button>

<p>@Status</p>

@code {
    private string SelectedPath = "";
    private string InputText = "";
    private string Status = "";

    private List<string> AvailableProfiles = new();
    private List<ParameterStorage> AvailableParameterStorages = new();
    private string SelectedProfile = "";

    private bool IsProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        var credsFile = new Amazon.Runtime.CredentialManagement.SharedCredentialsFile();
        AvailableProfiles = credsFile.ListProfileNames().ToList();
        SelectedProfile = AvailableProfiles.FirstOrDefault() ?? "";

        // Carregar os ParameterStorages do banco de dados
        AvailableParameterStorages = await DbContext.ParameterStorages.ToListAsync();
    }

    private async Task Upload()
    {
        try
        {
            Status = "";
            IsProcessing = true;

            if (string.IsNullOrEmpty(SelectedPath))
            {
                Status = "Por favor, selecione um caminho.";
                return;
            }

            var credsFile = new Amazon.Runtime.CredentialManagement.SharedCredentialsFile();
            if (!credsFile.TryGetProfile(SelectedProfile, out var profile))
            {
                Status = $"Perfil '{SelectedProfile}' não encontrado.";
                return;
            }

            var accessKey = profile.Options.AccessKey;
            var secretKey = profile.Options.SecretKey;

            await ParamStore.UploadVariablesAsync(InputText, SelectedPath, accessKey, secretKey);
            Status = "Variáveis enviadas com sucesso!";
        }
        catch (Exception ex)
        {
            Status = $"Erro: {ex.Message}";
        }
        finally
        {
            IsProcessing = false;
        }
    }
}